/**
		String name,food;
		int age;
		Scanner escaner= new Scanner(System.in);
		
		name = escaner.nextLine();
		age = escaner.nextInt();
		escaner.nextLine();
		food = escaner.nextLine();
		
		System.out.println("mi nombre es: "+name);
		System.out.println("mi edad es: "+age);
		System.out.println("mi comida favorita es: "+food);
		
		**/
		/**
		double friendo;
		double friends;
		friends=10;
		
		friendo=(double) friends/3;
		
		if (friends>=10) {
			System.out.println("se ejecuto el if, felicidades.");
		}
		
		
		System.out.println(friendo);
		**/
		/**
		int i,c=0;
		for (i=0;i<=10;i++) {
			c+=1;
			
		}
		System.out.println(c);
		
		
		String name= JOptionPane.showInputDialog("INGRESE SU NOMBRE: ");
		int num= Integer.parseInt(JOptionPane.showInputDialog("INGRESE SU EDAD: "));
		double height =Double.parseDouble(JOptionPane.showInputDialog("INGRESE SU ALTURA: "));
		
		JOptionPane.showMessageDialog(null, "hola: "+name+" nos alegra que usted tenga "+num+" aÃ±os");
		JOptionPane.showMessageDialog(null, "su altura es de: "+height);


		double x,y;
		Scanner escaner=new Scanner(System.in);
		x=escaner.nextDouble();
		y=escaner.nextDouble();
		double raiz=Math.sqrt(x+ y);
		double round=Math.round(raiz);
		System.out.println(round);
		
		escaner.close();
		
		Random numero_azar=new Random ();
		double x = numero_azar.nextDouble(2);
		System.out.println(x);

			int pene=28;
		switch(pene) {
			case 28:
				System.out.println("es una cosa descomunal");
				break;
			case 18:
				System.out.println("es promedio");
			default:
				System.out.println("usted no tiene pene");
				
		}
		Scanner escaner=new Scanner(System.in);
		String n = escaner.nextLine();
		float total = 0;
		int cant= 0;
		int full=0,c;
		for (int i =0;i< n.length();i++) {
			System.out.println(n.length());
			System.out.println("Ingree temperatura: ");
			c = escaner.nextInt();
			
			if (c>=25 && c<50) {
				total+=c;
				cant++;	
			}
			
			full++;
			
			
		}
		System.out.println(cant);
		System.out.println(full);
		escaner.close();

		Scanner escaner= new Scanner(System.in);
		String text= escaner.next();
		if (!text.equals("q")&&!text.equals("Q")) {
			System.out.println("Sigues jugando");
		}
		else {
			System.out.println("saliste del juego");
			
		}

		Scanner escaner=new Scanner(System.in);
		int columnas,filas;
		System.out.println("ingrese numero de columnas");
		columnas=escaner.nextInt();
		System.out.println("ingrese numero de filas");
		filas=escaner.nextInt();
		escaner.nextLine();
		System.out.println("ingrese simbolo que usara");
		String simb=escaner.nextLine();
		
		
		for (int i=0;i<=filas;i++) {
			System.out.println();
		
			for (int j=0;j<=columnas;j++) {
				System.out.print(simb);
				
			}
		}
		
		String sentence = "The data of Branch 1 are correct - true"; 
		String[] elements = sentence.split(" ");
		System.out.println(elements[0]);
                
		String str = "Scaler";
		for (int i = 0; i < str.length(); i++) {
			System.out.println(str.charAt(i));
			 
		 }
		String[] cars=new String[3];
		cars[0]="pene";
		cars[1]="";
		System.out.println(cars[0]);
		
		for(int i=0;i<cars[0].length();i++) {
			
			System.out.println(cars[0].charAt(i));
		}

		String[][] cars= new String[4][3];
		Scanner escaner = new Scanner(System.in);


		cars[0][0]="1";
		cars[0][1]="2";
		cars[1][0]="3";
		cars[1][1]="4";
		


		for (int i = 0;i<2;i++) {
			System.out.println();
			
			for (int j=0;j<2;j++) {
				System.out.print(cars[i][j]);
			}
			
		}
		System.out.println(cars.length);
		System.out.println(cars[0].length);








		Scanner escan= new Scanner(System.in);
		float num=escan.nextFloat();
		float num2=escan.nextFloat();
		de_apoco ord=new de_apoco();
		float def=ord.de_apoco(num, num2);
		
		cuadrado cuad=new cuadrado(def);
		
		
		
		String result1=cuad.tostring();
		System.out.println(result1);
		
		System.out.println(cuad.get_cuadrado());
	
		
		
		
		
	}
	float de_apoco(float num,float num2){
		float may=0;
		if (num>num2){
			may=num;
			
		}
		
		
		return may;
		
		
	}
		
}		
		
class cuadrado{
	private static float lado;
	cuadrado(float num){
		lado=num;
		
}		
	cuadrado(){
		lado=0;
	}
	
	void set_cuadrado(float num){
		
		lado=num;
	}
	
	float get_cuadrado(){
		return lado;
	}
	
	float superficie(){
		return lado*lado;
		
	}
	
	
	String tostring(){
		return "la superficie de: "+lado +" es igual a "+superficie();
		
		
	}






CIRCULO:

	Scanner escan=new Scanner(System.in);
		
		float num1=escan.nextFloat();
		float num2=escan.nextFloat();
		de_apoco may = new de_apoco();
		float def=may.mayor(num1, num2);
		
		circulo circi=new circulo(def);
		System.out.println(circi.tostring());
		
		escan.close();
	
	
	
	
	public float mayor(float num1,float num2) {
		float may;
		if (num1>num2) {
			
			may=num1;
		}
		else {
			may=num2;
		}
		return may;
	}
	
	
		

}

}

class circulo{
	private float circu=0;
	
	public circulo(float num){
		circu=num;
		
	}
	public void setCirc(float num) {
		
		circu=num;
		
	}
	public double superficie() {
		
		return 2*3.14*(circu/2);
		
	}
	
	public String tostring() {
		
		return "la superficie del circulo de radio "+circu/2+" es de "+superficie();
	}

}

		Boolean a=true;
		Boolean b =false;
		
		Boolean como=a.equals(b);
		

		System.out.println(como);



		***********
		ArrayList<String> pene=new ArrayList<String>();
		pene.add("hola");
		pene.add("q ace");
		pene.set(0, "malos dias");
		
		for (int i=0;i<pene.size();i++) {
			System.out.println(pene.get(i));
			
			
		}


!""""""""""""""""""""""""
		ArrayList<ArrayList> groceries=new ArrayList();
		
		
		ArrayList<String> bakerylist=new ArrayList<String>();
		bakerylist.add("donas de manteca");
		bakerylist.add("acelga");
		bakerylist.add("torta mousse de rucula");
		
		ArrayList<String> foodlist=new ArrayList<String>();
		foodlist.add("sopa");
		foodlist.add("fideos");
		foodlist.add("sushi");
		
		
		ArrayList<String> drinks= new ArrayList<String>();
		drinks.add("cocacola");
		drinks.add("agua");
		drinks.add("limon");
		
		
		groceries.add(bakerylist);
		groceries.add(foodlist);
		groceries.add(drinks);
		System.out.println(groceries);
		System.out.println(groceries.get(0).get(1));
		
		
		**/

+++++++++++++++++++++++++++++++++++++

		ArrayList<String> animals= new ArrayList<String>();
		animals.add("canario");
		animals.add("gato");
		animals.add("perro");
		for (String i:animals) {
			System.out.println(i);
		}
+++++++++++++++++++++++++++++++++++++

public static void main(String[] args) {
	Static int a,i;
		
		a=5;
		hola();
		System.out.println(i);
	}
	
	public static void hola() {
		i =a;
		
	}


+++++++++++++++++++++++++++++++++++++
		int z=hello(5);
		System.out.println(z);
		
	}
	
	public static int hello(int num) {
		
		
		
		num1=num;
		
		return num1;
		
	}                            
++++++++++++++++++++++++++++++++++++++

	public static void main(String[] args) {
		
		int num1=6;
		int num2=7;
		int suma=hello(num1,num2);
		System.out.println(suma);
	}
	public static int hello(int num1,int num2) {
		
		return num1+num2;
		
	} 
++++++++++++++++++++++++++++++++++++++

	public static void main(String[] args) {
		hello(4);
		hello(3,4,5);
		
		
	}
	public static void hello(int num) {
		int num1;
		num1=num;
		System.out.println(num1);
		
	}
	
	
	public static void hello(int num1,int num2,int num3) {
		int numeros;
		numeros=num1+num2+num3;
		System.out.println(numeros);
		
	}
	
+++++++++++++++++++++++++++++++++++++++

static int saldo,may,num1,num2;
	public static void main(String[] args) {
		Scanner escaner=new Scanner(System.in);
		System.out.println("ingrese dos numeros: ");
		num1=escaner.nextInt();
		num2=escaner.nextInt();
		ordenar();
		hello(may);
		int total=getHello();
		String printi=tostring();
		System.out.println(printi);
	}
	
	
	public static void ordenar() {
		if (num1>num2) {
			may=num1;
		}
		else {
			may=num2;
		}
		
	}
	
	
	public static void hello(int num) {
		saldo=num;
	}
	
	public static int getHello() {
		return saldo;
		
	}
	
	public static String tostring() {
		return "el saldo mayor es de "+saldo;
	}
	
	public class de_apoco 
{

+++++++++++++++++++++++++++++++++++++++
	public static void main(String[] args) {
		double suma=add(3,5,8);
		System.out.println(suma);
		
	}
	
	public static int add(int num1,int num2) {
		return num1+num2;
	}
	public static int add(int num1,int num2,int num3) {
		return num1+num2+num3;
		
	}
	public static double add(double num1,double num2,double num3,double num4) {
		return num1+num2+num3+num4;
	}

}
++++++++++++++++++++++++++++++++++++++++
public class de_apoco 
{
	
	public static void main(String[] args) {
		
		car a = new car("santi",20);
		car b = new car("pedro",40);
		
		System.out.println(a.toString());
		System.out.println(b.toString());
		
}
}

class car{
	
	public String nombre;
	public int edad;
	
	public car(String nom,int num1) {
		this.nombre = nom;
		this.edad  =  num1;
	}
	
	public String getName(){
		return nombre;
	}
	
	public int getAge() {
		return edad;
	}
	
	public String toString() {
		
		return "el nombre del sujeto es "+nombre+" y su edad es de "+edad;
	}
}


import java.util.Random;
import java.util.ArrayList;
import java.util.Scanner;




public class de_apoco 
{
	
	public static void main(String[] args) {

		humano human1=new humano("ricardo",70);
		humano human2=new humano("luis",98);
		human1.comer();

}
}

class humano{
	String nombre;
	int age;
	
	humano(String name,int edad){
		nombre=name;
		age=edad;

	}
	
	public void comer() {
		
		System.out.println(nombre+" esta comiendo");
	}
}

++++++++++++++++++++++++++++++++++++++ CUANDO VARIABLE LOCAL

import java.util.Random;
import java.util.ArrayList;
import java.util.Scanner;




public class de_apoco 
{
	
	public static void main(String[] args) {
		humano human1=new humano("ricardo",70);
		humano human2=new humano("luis",98);
		
}
}

class humano{
	
	
	humano(String name,int edad){
		String nombre;
		int age;
		nombre=name;
		age=edad;
		comer (nombre,age);
		
		
	}
	
	public void comer(String nombre,int age) {
		
		System.out.println(nombre+" esta comiendo");
		System.out.println("su edad es de "+age);
		
	}

+++++++++++++++++++++++++++++++++++++++otro local
import java.util.Random;
import java.util.ArrayList;
import java.util.Scanner;




public class de_apoco 
{
	
	public static void main(String[] args) {
		Random rand =new Random();
		float azar=rand.nextFloat()+1;
		random randi=new random(azar);
		
		
		
	}
		
}


class random{
	
	random(float azares){
		float azarr;
		azarr=azares;
		getAzar(azarr);
	}
	public void getAzar(float azarr){
		System.out.println(azarr);
	}
	


	
}
+++++++++++++++++++++++++++++++++++++++++++++
public class de_apoco 
{
	
	public static void main(String[] args) {
		System.out.println("Lectura de numeros en un archivo de texto...");
		 File f = new File("pene.txt");
		 try (Scanner sc = new Scanner(f)) 
		 {
			 while (sc.hasNextLine())
			 {
				 String num = sc.nextLine();
				 System.out.println(num);
			 }
		 } 
		 catch (FileNotFoundException ex) 
		 {
			 System.out.println("No existe el archivo...");
		 }

		
	}
		
}

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

public class de_apoco 
{

	public static void main(String[] args) {
		
		Car auto= new Car("Mustang");
		Car auto2=new Car("Ferrari");
		Garage vehiculos=new Garage();
		vehiculos.Park(auto);
		vehiculos.Park(auto2);
		
	}

}

class Car{
	public String automovil;
	int c;
	Car(String modelo){
		
		automovil=modelo;
		c++;
		
	}
	
}
	
class Garage{
	
	void Park(Car auto){
		System.out.println("el auto "+auto.automovil);
		System.out.println(auto.c);
	}
	
}
++++++++++++++++++++++++++++++++++++++++++ static in oop



public class de_apoco 
{

	public static void main(String[] args) {
		
		Amigos amigo1= new Amigos("Pedro");
		Amigos amigo2=new Amigos("Juan");
		System.out.println(Amigos.cant_amigos);
		System.out.println(Amigos.cantamiguis());
	}

}

class Amigos{
	static int cant_amigos=0;
	String amigos;
	public Amigos(String amigo){
		amigos=amigo;
		cant_amigos++;
		
	}
	static String cantamiguis(){
		return "tengo " +cant_amigos;
	}
		
}

+++++++++++++++++++++++++++++++++++++++++++++++++

public class de_apoco 
{

	public static void main(String[] args) {
		auto auto = new auto("mustang");
		vehiculo garage=new vehiculo();
		garage.go(auto);
		bicicleta bici=new bicicleta("Venzo");
		vehiculo garage1=new vehiculo();
		garage1.stop(bici);
		System.out.println(bici.speed);
		System.out.println(bici.ruedas);
		System.out.println(auto.ruedas);
	
	}

}

class vehiculo  {
	double speed=50;
	
	void go(auto auto) {
		System.out.println(auto.name+" se mueve");
		
	}
	
	void stop(bicicleta bici) {
		System.out.println(bici.name_bici+" esta detenido");
	}
	
		
}

class bicicleta extends vehiculo{
	String name_bici;
	int ruedas=5;
	bicicleta(String name){
		name_bici=name;
	System.out.println(speed);//se la puede usar en cualquier lado	
	}
	
}
	
class auto extends vehiculo {
	int ruedas= 4;
	String name;
	
	auto(String nombre){
		name=nombre;
		
	}

}

++++++++++++++++++++++++++++++++++++++++++

public class de_apoco 
{

	public static void main(String[] args) {
		hero heroe=new hero("BATMAN",38,"DINERO");
		System.out.println(heroe.toString());
	}

}
class persona{
	String nombre;
	int edad;
	
	public persona(String name, int age) {
		this.nombre=name;
		this.edad=age;
	}

}

class hero extends persona{
	String power;
					
	hero(String name,int age, String power){
		super(name,age);
		this.power=power;
	}
	public String toString() {
		return "el nombre del superheroe es "+nombre+" con una edad de "+edad+" y su poder es "+power;
	}
	
}
++++++++++++++++++++++++++++++++++++++++
import java.util.Random;
import java.util.ArrayList;
import java.util.Scanner;
import java.io.File;
import java.util.Scanner;
import java.io.FileNotFoundException;



public class de_apoco 
{

	public static void main(String[] args) {
		hero heroe=new hero("BATMAN",38,"DINERO");
		System.out.println(heroe.toString());
	}

}
class persona{
	String nombre;
	int edad;
	
	public persona(String name, int age) {
		this.nombre=name;
		this.edad=age;
	}
	
	public String toString() {
		return nombre+"\n"+edad;
	}

}

class hero extends persona{
	String power;
					
	hero(String name,int age, String power){
		super(name,age);
		this.power=power;
		
		
	}
	public String toString() {
		return super.toString()+"\n"+power;
	}
	
}
+++++++++++++++++++++++++++++++++++++++++++++++++
public class de_apoco 
{

	public static void main(String[] args) {
		
		Car auto1=new Car("eubrolet");
		auto1.setName("santi");
		System.out.println(auto1.getName());
		
	}

}

class Car{
	private String name;
	
	
	Car(String nombre){
		
		setName(nombre);
	}
	
	void setName(String nombre) {
		name=nombre;
		
		
	}
	
	String getName() {
		return name;
	}
	
}

archivo = open("datos.txt", "r")

# Crear un array vacÃ­o
array = []

# Iterar sobre cada renglÃ³n del archivo
for renglon in archivo:
    # Eliminar los espacios en blanco y los caracteres especiales al final del renglÃ³n
    renglon = renglon.strip()
    # Agregar el renglÃ³n al array sin separar los elementos
    array.append(renglon)

# Cerrar el archivo
archivo.close()

# Mostrar el array
print(array)



import prueba_import


def cargar():
    v = [0]
    archivo = open("peajes-tp3 (1).txt", "r")

    array = []


    for renglon in archivo:
        renglon = renglon.strip()
        if len(renglon)<25:
            array.append(renglon)


    for i in range(len(array)):
        ticket = array[i][0:10]
        patente = array[i][10:17]
        vehiculo = array[i][17]
        forma_de_pago = array[i][18]
        cabina = array[i][19]
        km = array[i][20:]

        v.append(prueba_import.Ticket(ticket,patente,vehiculo,forma_de_pago,cabina,km))



    return v

def mostrar(v):
    n=len(v)
    for i in range(n):
        print(v[i])


def carga():
    v=[0]
    ticket=input("ingrese ticket: ")
    patente = input("ingrese patente: ")
    vehiculo = input("ingres un vehiculo: ")
    forma_de_pago = input("ingrese una forma de pago: ")
    cabina = input("ingrese una cabina: ")
    km = input("ingrese cantidad de km")

    v.append(prueba_import.Ticket(ticket, patente, vehiculo, forma_de_pago, cabina, km))
    return v

def carga_manual(v):
    ticket = input("ingrese ticket: ")
    patente = input("ingrese patente: ")
    vehiculo = input("ingres un vehiculo: ")
    forma_de_pago = input("ingrese una forma de pago: ")
    cabina = input("ingrese una cabina: ")
    km = input("ingrese cantidad de km")
    v.append(prueba_import.Ticket(ticket, patente, vehiculo, forma_de_pago, cabina, km))
    return v

def mostrarporticket(v):
    ordenar(v)
    for i in range(len(v)):
        print(v[i])

def ordenar(v):
    n=len(v)
    for i in range(len(v)):
        print(v[i].ticket)


def test():
    v=[]
    opc=0
    print(len(v))

    while opc !=5:
        print("1:cargar archivos y borrar el anterior array")
        opc=int(input("ingrese opcion a realizar"))
        if opc == 1:
            print("esta seguro que desea crear un nuevo arreglo?1:SI 2:NO")
            decision=int(input("ingrese opcion: "))
            if decision == 1:
                v=cargar()
                mostrar(v)
            else:
                continue

        elif opc == 2:

            if len(v) == 0:
                v=carga()
                mostrar(v)

            elif len(v) !=0:
                carga_manual(v)
                mostrar(v)

        elif opc == 3:
            if len(v) != 0:
                mostrarporticket(v)


if __name__ == '__main__':
    test()

++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++
class Venta:
    def __init__(self,nombre,tipo,marca,cuotas,monto):
        self.nombre=nombre
        self.tipo=tipo
        self.marca =marca
        self.cuotas=cuotas
        self.monto=monto

    def __str__(self):
        cad='{} {} {} {} {}'
        return cad.format(self.nombre,self.tipo,self.marca,self.cuotas,self.monto)


def mostrar_menu():
    print("concesionaria de autos")
    print("1. Cargar")
    print("2. Mostrar")
    print("3. Buscar")
    print("4. Generar matriz")
    print("5. Generar archivo")
    print("6. Cuotas Pagas")
    opc=int(input("ingrese opcion: "))
    return opc


def add_in_order(v,reg):
    izq,der=0,len(v)-1
    while izq<=der:
        c=(izq+der) // 2
        if reg.nombre ==v[c].nombre:
            pos =c
            break
        if  reg.nombre < v[c].nombre:
            der=c-1
        else:
            izq=c+1
    if izq > der:
        pos = izq

    v[pos:pos] = [reg]

def cargar_vector(v,n):
    noms=["Juan","Ana","Pedro","Luz"]
    for i in range(n):
        nombre = random.choice(noms)+str(i)
        tipo = random.randint(0, 3)
        marca = random.randint(0, 15)
        cuotas = random.randint(10, 500)
        monto = random.randint(1000, 50000)
        reg = Venta(nombre, tipo, marca, cuotas, monto)
        add_in_order(v, reg)

def mostrar_arreglo(v):
    for i in range(len(v)):
        print(v[i])

def buscar_nombre(v,nom):
    izq,der = 0, len(v)-1
    while izq <=der:
        c=(der+izq)//2
        if nom ==v[c].nombre:
            return c
        if nom <= v[c].nombre:
            der=c-1
        else:
            izq=c+1
    return -1


def validar_mayor_que(inf):
    num=inf
    while num <= inf:
        num=int(input("ingrese numero mayor al indicado"))
    return num

def matriz(v):
    ma=[[0]*15 for fila in range(4)]
    for reg in v:
        ma[reg.tipo][reg.marca-1]+=reg.monto
    return ma

def mostrar_matriz(ma):
    for f in range(len(ma)):
        for c in range(len(ma[0])):
            if ma[f][c] != 0:
                print("en el tipo de pago "+str(f)+" con marcas de "+str(c+1)+" hay acumulados "+str(ma[f][c]))


def generar_archivo(v, num, fd):
    m=open(fd,"wb")
    for reg in v:
        if reg.monto > num and reg.tipo !=2:
            pickle.dump(reg,m)
    m.close()


def mostrar_archivo(fd):
    if not os.path.exists(fd):
        print("no existe!")
        return
    suma,cont=0,0
    m=open(fd,"rb")
    tam=os.path.getsize(fd)

    while m.tell() < tam:
        reg=pickle.load(m)
        print(reg)
        suma+=reg.monto
        cont+=1
    m.close()


def principal():
    v = []
    opcion =-1
    while opcion != 0:
        opcion = mostrar_menu()
        if opcion == 1:
            n = 5
            cargar_vector(v, n)

        else:
            if len(v)==0:
                print("el vector no esta cargado")
            else:
                if opcion==2:
                    mostrar_arreglo(v)
                elif opcion ==3:
                    nom=input("ingrese nombre del cliente")
                    pos=buscar_nombre(v,nom)
                    if pos ==-1:
                        print("el elemento no existe")
                    else:
                        x = validar_mayor_que(-1)
                        v[pos].cuotas +=x
                        print("cliente encontrado",v[pos])
                elif opcion ==4:
                    ma=matriz(v)
                    mostrar_matriz(ma)
                elif opcion == 5:
                    fd='ventas.dat'
                    print("ingrese monto mayor")
                    num=validar_mayor_que(0)
                    generar_archivo(v,num,fd)
                    mostrar_archivo(fd)
                elif opcion == 6:




if __name__ =="__main__":
    principal()











	

